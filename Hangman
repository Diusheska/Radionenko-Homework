import codecs
from collections import Counter

# open file, switch to lower and get rid of paragraph breaks
with codecs.open(r'hangman_list.txt', encoding='utf-8') as f_obj:
    text = f_obj.read().lower()
    textlist = text.splitlines()

# ask user for number of letters
wl = int(input("Hi user! Let's play Hangman! How many letters does your word have?\n"))
word = ["-"]*wl
# count number of game attempts
attempts = 0

# display how the word looks like
def show_word(w):
    print("\nThis is how the word looks now:")
    print(' '.join(map(str, w)))

# call function to show the word at the beginning
show_word(word)
# list of words filtered based on user's answer
f = list(filter(lambda x: int(len(x)) == wl, textlist))

# show most frequent character for specific list of words
def cnt_char(lst):
    cnt = Counter()
    for w in lst:
        for char in w:
            while char not in (word):
                cnt[char]+=1
                break
    cd = dict(cnt.most_common(1))
    for char in cd:
        return char

# check if there are still any unknown letters in the word:
def check_win(word):
    if word.count("-") == 0:
        return True        
    else:
        return False

# if letter is correct, ask for and set the position of the letter in word
def user_prompt():
    global f
    # ask for the 1st letter hint
    inplet = input("\nAny letter prompts? Type any letter from your word and hit Enter:\n")
# check whether this word is in list of words?
    while True:
        inppos = int(input("\nType letter position in the word:\n"))
        word[inppos-1] = inplet
        show_word(word)
        f = list(filter(lambda x: x[inppos-1] == inplet, f))
        inpopt = input("\nMore occurances of this letter in the word? Type Y/N: \n").upper()
        if inpopt == "N":
            return inppos
            break
        else:
            continue

# computer tries to guess the letter:
def try_to_guess():
    global attempts
    global f
# find most used character from filtered list:
    char = cnt_char(f)
    print("\nMy next guess is '{}'".format(char))
    attempts += 1
    inp = input("Is it in your word? Type Y/N:\n").upper()
    if inp == "Y":
        while True:
            inppos = int(input("\nType letter position in the word:\n"))
            word[inppos-1] = char
            show_word(word)
            f = list(filter(lambda x: x[inppos-1] == char, f))
            if check_win(word):
                break
            else:
                inpopt = input("\nMore occurances of this letter in the word? Type Y/N: \n").upper()
                if inpopt == "N":
                    f = list(filter(lambda x: x[inppos-1] == char, f))
                    break
                else:
                    continue
    elif inp == "N":
# filter out words with this letter from the list
        f = list(filter(lambda w: all([letter != char for letter in w]), f))

# actual game
def play_game():
    user_prompt()
    while not check_win(word):
        try_to_guess()
    else:
        print("\nYes! I did! I'm a very smart computer! It took me {} attempts".format(attempts))

play_game()
